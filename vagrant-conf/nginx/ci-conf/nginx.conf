#user  nobody;
worker_processes  1;

# there environment variables will be provided by Docker's links's, so tell nginx to keep them

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {

        listen       443;
        server_name  localhost;
    
        ssl                  on;
        ssl_certificate      server.crt;
        ssl_certificate_key  server.key;
 
        ssl_session_timeout  5m;
    
        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers   on;

        # AngularJS client app HTML files
        location / {

            root  /vagrant/dist;
            index  index.html;
        }

        # anything on /api gets routed to the nodejs app running on port 3000
        location /api {

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Client-DN      $ssl_client_s_dn;
            proxy_set_header X-SSL-Subject    $ssl_client_s_dn; 
            proxy_set_header X-SSL-Issuer     $ssl_client_i_dn;
            proxy_pass http://localhost:3000;
            proxy_redirect off;
        }
    }
}
